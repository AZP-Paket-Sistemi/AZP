#!/bin/bash

### AZP Paket Sistemi 3.0
# AZP Offical Site: https://azp-paket-sistemi.github.io
# AZP Offical Depo: https://azp-paket-sistemi.github.io/azp-depo

# 2021-2022 AZP
# 2019-2022 PacPERRO OS

# Tərcümə faylı
TEXTDOMAINDIR=/usr/share/locale
TEXTDOMAIN=azp

# Bəzi teglər :)
error=$(echo -e "\033[1;31m E: \033[:0m")
process=$(echo -e "\033[1;34m P: \033[:0m")
finished=$(echo -e "\033[1;32m F: \033[:0m")
remove=$(echo -e "\033[1;31m R: \033[:0m")
info=$(echo -e "\033[1;37m I: \033[:0m")
warning=$(echo -e "\033[1;33m V: \033[:0m")

# Root kontrol
if [ $UID -ne 0 ]
then
  echo "$error" $"Please open with root !"
  exit
fi

# Bağımlılıqları yoxlama
depends=("zip" "unzip" "wget" "tar" "ping")
for i in ${depends}; do
  if ! command -v "${i}" &>/dev/null; then
    echo "$error" "${i}" $" -- not installed !"
    exit
  fi
done

# Köhnə data yoxlama
[[ -d /tmp/azptmp ]] && echo "$remove" $"Old data remove..." && rm -r /tmp/azptmp

# Depo Əlavə Etmə
[[ ! -d /etc/azp ]] && mkdir -p /etc/azp/
[[ ! -d /etc/azp/azp-depo ]] && mkdir -p /etc/azp/azp-depo
[[ ! -d /var/cache/azp ]] && mkdir -p /var/cache/azp
 # -- AZP Rəsmi sayt link --
 rm -r /var/cache/azp/azp-depo &>/dev/null
 wget https://raw.githubusercontent.com/AZP-Paket-Sistemi/AZP/main/azp-depo &>/dev/null
 [[ ! -f azp-depo ]] && echo "https://azp-paket-sistemi.github.io/azp-depo" >> /var/cache/azp/azp-depo
 cp azp-depo /var/cache/azp/azp-depo &>/dev/null
 rm -r azp-depo &>/dev/null
 azp_offical_depo=$(cat /var/cache/azp/azp-depo)
if ! [ -f /etc/azp/azp-depo/depo ]
then
  echo "$process" $"A repository is not set. Must be added. (To add a standard azp repository: -azpd)"
  sleep 1
  read -p $"Add Repo: " add_depo
  if [[ ${add_depo:0:8} != "https://" ]]
  then
    if [[ ${add_depo:0:7} != "http://" ]]
    then
       if [[ ${add_depo:0:7} != "-azpd" ]]
       then
         echo "$error" $"It is an invalid repo !"
         exit
       else
         mkdir -p /tmp/azp_depo_add
         cd /tmp/azp_depo_add
         wget $azp_offical_depo/[depo]/depo.zip &>/dev/null
         mkdir depo_file
         echo "$process" $"'depo.zip' extract..."
         unzip depo.zip -d depo_file &>/dev/null
         cd depo_file
         dlink=$(cat depo)
         echo -e "\033[1;35m AZP Repo: $dlink \033[:0m"
         echo -e "\033[1;32m depo == /etc/azp/azp-depo \033[:0m"
         echo -e "\033[1;32m info-depo == /etc/azp/azp-depo \033[:0m"
         cp -p * /etc/azp/azp-depo/
         cd ..
         cd ..
         rm -r /tmp/azp_depo_add
         exit
       fi
    fi
  fi
  if [ -d /tmp/azp_depo_add ]
  then
    echo "$process" $"Old data remove..."
    rm -r /tmp/azp_depo_add
  fi
  mkdir -p /tmp/azp_depo_add
  cd /tmp/azp_depo_add
  echo "$process" $"'depo.zip' download..."
  if ! wget $add_depo/[depo]/depo.zip &>/dev/null;
  then
    echo "$error" "$add_depo" $" == depo.zip not found !"
    exit
  fi
  mkdir depo_file
  echo "$process" $"'depo.zip' extract..."
  unzip depo.zip -d depo_file &>/dev/null
  cd depo_file
  infodepo_name=$(sed -n 1p info-depo)
  if [ ${infodepo_name:0:5} != "name:" ]
  then
    echo "$error" $"'name:' not spelled correctly!"
    exit
  fi
  infodepo_description=$(sed -n 2p info-depo)
  if [ ${infodepo_description:0:12} != "description:" ]
  then
    echo "$error" $"'description:' not spelled correctly!"
    exit
  fi
  infodepo_link=$(sed -n 3p info-depo)
  if [ ${infodepo_link:0:5} != "link:" ]
  then
    echo "$error" $"'link:' not spelled correctly!"
    exit
  fi
  dlink=$(cat depo)
  dabout=$(cat info-depo)
  echo -e "\033[1;35m Depo: $dlink \033[:0m"
  echo -e "\033[1;37m $dabout \033[:0m"
  echo -e "\033[1;32m depo == /etc/azp/azp-depo \033[:0m"
  echo -e "\033[1;32m info-depo == /etc/azp/azp-depo \033[:0m"
  cp -p * /etc/azp/azp-depo/
  cd ..
  cd ..
  rm -r /tmp/azp_depo_add
  if [[ $add_depo == "-azpd" ]]
  then
    mkdir -p /tmp/azp_depo_add
    cd /tmp/azp_depo_add
    wget $azp_offical_depo/[depo]/depo.zip &>/dev/null
    mkdir depo_file
    echo "$process" $"'depo.zip' extract..."
    unzip depo.zip -d depo_file &>/dev/null
    cd depo_file
    dlink=$(cat depo)
    echo -e "\033[1;35m AZP Repo: $dlink \033[:0m"
    echo -e "\033[1;32m depo == /etc/azp/azp-depo \033[:0m"
    echo -e "\033[1;32m info-depo == /etc/azp/azp-depo \033[:0m"
    cp -p * /etc/azp/azp-depo/
    cd ..
    cd ..
    rm -r /tmp/azp_depo_add
   fi
fi
azp_pack_depo=$(cat /etc/azp/azp-depo/depo)



if [[ $1 == "" ]]
then
  echo -e """\033[1;34m

   _________________________________
   |              ___________      |
   |       /\    |___  /  __ \     |
   |      /  \      / /| |__) |    |
   |     / /\ \    / / |  ___/     |
   |    / ____ \  / /__| |         |
   |   /_/    \_\/_____|_|         |
   |                               |
   ---------------------------------

                
                | 3.0 |  
                -------
  """

  echo -e """

   PacPERRO OS tərəfindən hazırlanmış paket sistemi
   (Package system developed by PacPERRO OS)

   Yardım: azp -h
   Help: azp -h

   AZP Offical Site: https://azp-paket-sistemi.github.io
   AZP Depo: https://azp-paket-sistemi.github.io/azp-depo
   PacPERRO OS: https://pacperro-os.github.io

          © 2019-2022 PacPERRO OS
          © 2021-2022 AZP

  \033[:0m"""
fi

mkdir -p /etc/azp/azp-depo &>/dev/null
mkdir -p /var/cache/azp-archives &>/dev/null

if ! [ -f /etc/azp-version ]
then
  echo "3.0" >> /etc/azp-version
fi




# Paket quraşdırma
if [[ $1 == "-i" ]]
then
  paket_adi=$2
  if ! [[ "$2" != "" ]]
  then
    echo "$error" $"The package was not selected !"
    exit 1
  fi
  mkdir /tmp/azptmp
  if [ ! -f $paked_adi ]
  then
    echo "$error" $"Package Not Found !"
    exit
  fi
  if ! unzip $paket_adi -d /tmp/azptmp &>/dev/null;
  then
    echo "$error" $"The package could not be broken !"
    exit
  else
    echo "$process" $"Files Extract..."
  fi
  cd /tmp/azptmp
  i_program=$(cat app-name)
  info=$(sed -n 1p info)
  # Programın quraşdırılmış olub olmamasını yoxlama
  if [ -d /var/cache/azp/applications/$i_program ]
  then
    echo "$warning" $"This program is already installed, will be replaced with a new one ..."
    fayllar=$(cat /var/cache/azp/applications/$i_program/files)
    rm -rf $fayllar
    rm_program=$(cat /var/cache/azp/applications/$i_program/app-name)
    rm -rf /var/cache/azp/applications/$rm_program
  fi
  # Quraşdırılacaq programın qovluğu
  mkdir -p /var/cache/azp/applications/$i_program &>/dev/null
  if [ ! -f info ]
  then
    echo "$error" $"'info' not found, package invalid"
    rm -r /tmp/azptmp &>/dev/null
    rm -r /var/cache/azp/applications/$i_program
    exit
  fi
  [[ ! -s info ]] && echo "$error" $"the 'info' file is not written!" && exit
   # 'info' faylına yazılanları yoxlama
    line_name=$(sed -n 1p info)
    if [[ ${line_name:0:5} != "name:" ]]
    then
      echo "$error" $"'name:' not spelled correctly in 'info' file!"
      rm -r /var/cache/azp/applications/$i_program
      exit
    fi
    line_description=$(sed -n 2p info)
    if [[ ${line_description:0:12} != "description:" ]]
    then
      echo "$error" $"'description:' not spelled correctly in 'info' file!"
      rm -r /var/cache/azp/applications/$i_program
      exit
    fi
    if [[ ${line_description:14} == "*" ]]
    then
       line_description_ct=$(sed -n 5p info)
       if [[ ${line_description_ct:0:12} != "descritpion:" ]]
       then
         echo "$error" $"'description:' not spelled correctly in 'info' file! !"
         rm -r /var/cache/azp/applications/$i_program
         exit
       fi
    fi
    line_version=$(sed -n 3p info)
    if [[ ${line_version:0:8} != "version:" ]]
    then
      echo "$error" $"'version:' not spelled correctly in 'info' file!"
      rm -r /var/cache/azp/applications/$i_program
      exit
    fi
    line_version=$(sed -n 4p info)
    if [[ ${line_version:0:11} != "maintainer:" ]]
    then
      echo "$error" $"'maintainer:' not spelled correctly in 'info' file!"
      rm -r /var/cache/azp/applications/$i_program
      exit
    fi
    if [ ${info:6} != ${i_program} ]
    then
      echo "$error" $"The program names in the 'files' and 'app-name' files do not match!"
      rm -r /var/cache/azp/applications/$i_program
      exit
    fi
  if ! [ -f app-name ]
  then
    echo "$error" $"'app-name' not found, package invalid"
    rm -r /tmp/azptmp &>/dev/null
    rm -r /var/cache/azp/applications/$i_program
    exit
  fi
  if ! [ -s app-name ]
  then
    echo "$error" $"the 'app-name' file is not written!"
    rm -r /var/cache/azp/applications/$i_program
    exit
  fi
  if ! [ -f src.tar.bz2 ]
  then
    echo "$error" $"'src.tar.bz2' not found, package invalid"
    rm -r /tmp/azptmp &>/dev/null
    rm -r /var/cache/azp/applications/$i_program
    exit
  fi
  # Paket bağımlılıqları quraşdırma
  if [ -f depends ]
  then
    i_dep=$(cat depends);
    azp-depends depends
    cp -r depends /var/cache/azp/applications/$i_program
  fi
  cp -a info /var/cache/azp/applications/$i_program
  cp -a app-name /var/cache/azp/applications/$i_program
  mkdir azpsrc
  if ! tar -xf src.tar.bz2 -C azpsrc;
  then
    echo "$error" $"There was a problem with the 'src' file !"
    rm -r /tmp/azptmp &>/dev/null
    exit
  fi
  sleep 1
  echo "$(tar -tf src.tar.bz2)" >> azpsrc/srcfilelist
  cd azpsrc
  # Düzgün kopyalama prosesi
  echo "$process" $"Create files list..."
  for list in $(cat srcfilelist);
  do
    if [ -f ${list} ]
    then
      echo "/${list}" >> /var/cache/azp/applications/$i_program/files
      echo "${list}" >> copyfilelist
    else
      echo "${list}" >> folderslist
    fi
  done
  echo "$process" $"Create folders list..."
  touch /tmp/azptmp/notfolders
  for folders in $(cat folderslist);
  do
    if [ ! -s /${folders} ]
    then
      echo "${folders}" >> /tmp/azptmp/notfolders
    fi
  done
  for notfolders in $(cat /tmp/azptmp/notfolders);
  do
    mkdir -p /${notfolders}
    echo "/${notfolders}" >> /var/cache/azp/applications/$i_program/files
  done
  echo "$process" $"Files copied to file system..."
  for cplist in $(cat copyfilelist);
  do
    cp -a ${cplist} /${cplist}
  done
  cd ..
  rm -r /tmp/azptmp
  echo "$finished" $"Installation is complete"
fi




# Program Silmə
if [[ $1 == "-r" ]]
then
  r_program=$2
  if ! [[ "$2" != "" ]]
  then
    echo "$error" $"The program was not selected !"
    exit 1
  fi
  [[ ! -d /var/cache/azp/applications/$2 ]] && echo "$error" $"Application not found !" && exit
  read -p $"Remove application ? [h/y]: " program_r_secim
  if [ ${program_r_secim:0:3} == "lib" ]
  then
    read -p "Can be library is a system library. Are you sure the library delete ? [h/y]:" lib_r_secim
    [[ $lib_r_secim == "y" ]] && exit
  fi
  if [ -f /var/cache/azp/applications/$r_program/depends ]
  then
    read -p $"Find and delete depends ? [h/y]: " depends_r_secim
    if [[ $depends_r_secim == "h" ]]
    then
      depends=("$(cat /var/cache/azp/applications/$r_program/depends)")
      for d in ${depends};
      do
        d_fayllar=$(cat /var/cache/azp/applications/${d}/files)
        rm -rf $d_fayllar
        rm_d=$(cat /var/cache/azp/applications/${d}/app-name)
        rm -rf /var/cache/azp/applications/$rm_d
      done
    fi
    [[ $depends_r_secim == "y" ]] && echo "$process" $"Next process..."
  fi
  if [[ $program_r_secim == "h" ]]
  then
    cd /var/cache/azp/applications &>/dev/null
    if ! cd $r_program &>/dev/null;
    then
      echo "$error" $"There is no such program !"
      exit
    fi
    fayllar=$(cat /var/cache/azp/applications/$r_program/files)
    rm -rf $fayllar
    rm_program=$(cat /var/cache/azp/applications/$r_program/app-name)
    rm -rf /var/cache/azp/applications/$rm_program
    sleep 1
    echo "$finished" $"Process Finished"
    cd ..
  fi
  [[ $program_r_secim == "y" ]] && echo "$finished" $"Exit" && exit
fi




# Program Haqqında Məlumat
if [[ $1 == "-a" ]]
then
  program_info=$2
  if ! [[ "$2" != "" ]]
  then
    echo "$error" $"The program was not selected !"
    exit
  fi
  if ! [[ -d /var/cache/azp/applications/$program_info ]]
  then
    echo "$error" $"Application not found !"
    exit
  fi
  echo "-------------------"
  if ! [[ -f /var/cache/azp/applications/$program_info/info ]]
  then
    echo "$error" $"'info' file not found !"
    exit
  fi
  name=$(sed -n 1p /var/cache/azp/applications/$program_info/info)
  description=$(sed -n 2p /var/cache/azp/applications/$program_info/info)
  version=$(sed -n 3p /var/cache/azp/applications/$program_info/info)
  maintainer=$(sed -n 4p /var/cache/azp/applications/$program_info/info)
  description1=$(sed -n 5,1000p /var/cache/azp/applications/$program_info/info)
  description_out=$([[ ${description:13} != "*" ]] && echo "${description:13}" || echo "${description1:14}")
  echo -e "\033[1;32m name: \033[:0m" "\033[1;37m${name:6}\033[:0m"
  echo -e "\033[1;32m description: \033[:0m" "\033[1;37m$description_out\033[:0m"
  echo -e "\033[1;32m version: \033[:0m" "\033[1;37m${version:8}\033[:0m"
  echo -e "\033[1;32m maintainer: \033[:0m" "\033[1;37m${maintainer:12}\033[:0m"
fi




# Quraşdırılan programlar listəsi
if [[ $1 == "-pl" ]]
then
  cd /var/cache/azp/applications/ &>/dev/null
  echo "$(ls)" >> /var/cache/azp/apps-list
  echo $"Apps:"
  for apps_list in $(cat /var/cache/azp/apps-list);
  do
    if [ ${apps_list:0:3} == "lib" ]
    then
      echo -e "\033[1;32m Lib: \033[:0m" "${apps_list}"
    else
      echo -e "\033[1;35m App: \033[:0m" "${apps_list}"
    fi
  done
  rm -r /var/cache/azp/apps-list
  cd ..
fi




# Depodan yükləmə və quraşdırma
if [[ $1 == "install" ]]
then
  if [ -d /tmp/azp-depoins ]
  then
    echo "$remove" $"Old data remove..."
    rm -r /tmp/azp-depoins &>/dev/null
  fi
  mkdir -p /tmp/azp-depoins
  cd /tmp/azp-depoins &>/dev/null
  depo_app=$2
  if ! [[ "$2" != "" ]]
  then
    echo "$error" $"The program was not selected !"
    exit
  fi
  repo_ad=$depo_app
  if ! wget $azp_pack_depo/${repo_ad:0:1}/$repo_ad/latest-file &>/dev/null;
  then
    echo -e "$error" "'$depo_app'" $" not found !"
    rm -r /tmp/azp-depoins &>/dev/null
    exit
  fi
  echo "$process" $"The repo file is read ..."
  latest_file=$(cat latest-file) &>/dev/null
  if [ -f /var/cache/azp-archives/$latest_file ]
  then
    echo "$process" $"There is an $latest_file package so this package will be installed"
    azp -i /var/cache/azp-archives/$latest_file
    rm -r /tmp/azp-depoins &>/dev/null
    exit 1
  fi
  echo -e "\033[1;34m ------------ \033[:0m"
  echo -e "\033[1;35m Depo: $azp_pack_depo \033[:0m"
  echo -e "\033[1;35m Package: $azp_pack_depo/${repo_ad:0:1}/$repo_ad/$latest_file \033[:0m"
  echo -e "\033[1;34m ------------ \033[:0m"
  echo "$process" "$latest_file" $"package download..."
  if ! wget $azp_pack_depo/${repo_ad:0:1}/$repo_ad/$latest_file &>/dev/null;
  then
    echo "$error" $"Package not download !"
    rm -r /tmp/azp-depoins &>/dev/null
    exit
  fi
  echo "$process" $"Package Install..."
  mkdir /tmp/azptmp
  if [ ! -f $latest_file ]
  then
    echo "$error" $"Package Not Found !"
    exit
  fi
  if ! unzip $latest_file -d /tmp/azptmp &>/dev/null;
  then
    echo "$error" $"The package could not be broken !"
    exit
  else
    echo "$process" $"Files Extract..."
  fi
  # AZP Archives faylını yeniləmə
  [[ ! -f /var/cache/azp-archives/archives ]] && echo "# AZP Archives" >> /var/cache/azp-archives/archives
  cp -r $latest_file /var/cache/azp-archives
  echo "$latest_file -- $(date "+DATE: %D   TIME: %T")" >> /var/cache/azp-archives/archives
  cd /tmp/azptmp
  i_program=$(cat app-name)
  info=$(sed -n 1p info)
  if ! [ -f info ]
  then
    echo "$error" $"'info' not found, package invalid"
    rm -r /tmp/azptmp &>/dev/null
    exit
  fi
  if ! [ -s info ]
  then
    echo "$error" $"the 'info' file is not written!"
    exit
  fi
   # 'info' faylına yazılanları yoxlama
    line_name=$(sed -n 1p info)
    if [ ${line_name:0:5} != "name:" ]
    then
      echo "$error" $"'name:' not spelled correctly in 'info' file!"
      exit
    fi
    line_description=$(sed -n 2p info)
    if [ ${line_description:0:12} != "description:" ]
    then
      echo "$error" $"'description:' not spelled correctly in 'info' file!"
      exit
    fi
    if [[ ${line_description:14} == "*" ]]
    then
       line_description_ct=$(sed -n 5p info)
       if [[ ${line_description_ct:0:12} != "descritpion:" ]]
       then
         echo "$error" $"'description:' not spelled correctly in 'info' file! !"
         exit
       fi
    fi
    line_version=$(sed -n 3p info)
    if [ ${line_version:0:8} != "version:" ]
    then
      echo "$error" $"'version:' not spelled correctly in 'info' file!"
      exit
    fi
    line_version=$(sed -n 4p info)
    if [ ${line_version:0:11} != "maintainer:" ]
    then
      echo "$error" $"'maintainer:' not spelled correctly in 'info' file!"
      exit
    fi
    if [ ${info:6} != ${i_program} ] &>/dev/null
    then
      echo "$error" $"The program names in the 'files' and 'app-name' files do not match!"
      exit
    fi
  if ! [ -f app-name ]
  then
    echo "$error" $"'app-name' not found, package invalid"
    rm -r /tmp/azptmp &>/dev/null
    exit
  fi
  if ! [ -s app-name ]
  then
    echo "$error" $"the 'app-name' file is not written!"
    exit
  fi
  if ! [ -f src.tar.bz2 ]
  then
    echo "$error" $"'src.tar.bz2' not found, package invalid"
    rm -r /tmp/azptmp &>/dev/null
    exit
  fi
  # Programın quraşdırılmış olub olmamasını yoxlama
  if [ -d /var/cache/azp/applications/$i_program ]
  then
    echo "$warning" $"This program is already installed, will be replaced with a new one ..."
    fayllar=$(cat /var/cache/azp/applications/$i_program/files)
    rm -rf $fayllar
    rm_program=$(cat /var/cache/azp/applications/$i_program/app-name)
    rm -rf /var/cache/azp/applications/$rm_program
  fi
  # Program qovluğu
  mkdir -p /var/cache/azp/applications/$i_program
  # Paket bağımlılıqları quraşdırma
  if [ -f depends ]
  then
    i_dep=$(cat depends);
    azp-depends depends
    cp -r depends /var/cache/azp/applications/$i_program
  fi
  if [ ! -s /var/cache/azp/applications/$i_program ]
  then
    echo "$warning" $"This program is already installed, will be replaced with a new one ..."
  fi
  cp info /var/cache/azp/applications/$i_program
  cp app-name /var/cache/azp/applications/$i_program
  mkdir azpsrc
  if ! tar -xf src.tar.bz2 -C azpsrc;
  then
    echo "$error" $"There was a problem with the 'src' file !"
    rm -r /tmp/azptmp &>/dev/null
    exit
  fi
  sleep 1
  echo "$(tar -tf src.tar.bz2)" >> azpsrc/srcfilelist
  cd azpsrc
  # Düzgün kopyalama prosesi
  echo "$process" $"Create files list..."
  for list in $(cat srcfilelist);
  do
    if [ -f /tmp/azptmp/azpsrc/${list} ]
    then
      echo "/${list}" >> /var/cache/azp/applications/$i_program/files
      echo "${list}" >> copyfilelist
    else
      echo "${list}" >> folderslist
    fi
  done
  echo "$process" $"Create folders list..."
  touch /tmp/azptmp/notfolders
  for folders in $(cat folderslist);
  do
    if [ ! -s /${folders} ]
    then
      echo "${folders}" >> /tmp/azptmp/notfolders
    fi
  done
  for notfolders in $(cat /tmp/azptmp/notfolders);
  do
    mkdir -p /${notfolders}
    echo "/${notfolders}" >> /var/cache/azp/applications/$i_program/files
  done
  echo "$process" $"Files copied to file system..."
  for cplist in $(cat copyfilelist);
  do
    cp -prf ${cplist} /${cplist}
  done
  cd ..
  rm -r /tmp/azptmp
  echo "$finished" $"Process Finished"
  cd ..
  rm -r /tmp/azp-depoins &>/dev/null
fi




# Depodaki seçdiyiniz kategoriyada programları görmək
if [[ $1 == "-dpl" ]]
then
  read -p $"Category [a,b,c]: " depo_pl
  if ! wget $azp_pack_depo/$depo_pl/program-list &>/dev/null;
  then
    echo "$error" $"There is no such category !"
    exit
  fi
  if ! [ -f /var/cache/azp/depo-list ]
  then
    rm -r depo-list &>/dev/null
  fi
  mv program-list /var/cache/azp/
  echo "$output" "'$depo_pl'" $" apps:"
  for depo_apps_list in $(cat /var/cache/azp/program-list);
  do
    if [ ${depo_apps_list:0:3} == "lib" ]
    then
      echo -e "\033[1;32m Lib: \033[:0m" "${depo_apps_list}"
    else
      echo -e "\033[1;35m App: \033[:0m" "${depo_apps_list}"
    fi
  done
fi



# AZP son versiyaya yeniləmə
if [[ $1 == "upgrade" ]]
then
  if [ -d /tmp/azp-upgrade ]
  then
    rm -r /tmp/azp-upgrade
  fi
  mkdir /tmp/azp-upgrade
  cd /tmp/azp-upgrade
  wget $azp_pack_depo/azp-version &>/dev/null
  azp_upgrade=$(cat azp-version)
  if ! wget https://github.com/AZP-Paket-Sistemi/AZP/releases/download/azp-$azp_upgrade/azp-$azp_upgrade.zip &>/dev/null
  then
    echo "$error" $"Could not connect to depo"
    exit
  fi
  unzip azp-$azp_upgrade.zip &>/dev/null
  azp_version=$(cat /etc/azp-version)
  azp_l_version=$(cat etc/azp-version)
  if [ $azp_version == $azp_l_version ]
  then
    echo "$info" "AZP latest version installed == ($azp_version)"
    rm -r /tmp/azp-upgrade
    exit
  fi
  ./azp-install.sh
  cd ..
  rm -r /tmp/azp-upgrade
  echo "$finished" $"AZP updated"
fi




# Standart AZP deposu ayarlama
if [[ $1 == "-azpd" ]]
then
   mkdir -p /tmp/azp_depo_add
   cd /tmp/azp_depo_add
   wget $azp_offical_depo/[depo]/depo.zip &>/dev/null
   mkdir depo_file
   echo "$process" $"'depo.zip' extract..."
   unzip depo.zip -d depo_file &>/dev/null
   cd depo_file
   dlink=$(cat depo)
   echo -e "\033[1;35m AZP Repo: $dlink \033[:0m"
   echo -e "\033[1;32m depo == /etc/azp/azp-depo \033[:0m"
   echo -e "\033[1;32m info-depo == /etc/azp/azp-depo \033[:0m"
   cp -p * /etc/azp/azp-depo/
   cd ..
   cd ..
   rm -r /tmp/azp_depo_add
fi




# Hər hansı rəsmi olmayan AZP deposu əlavə etmə
if [[ $1 == "-azpdo" ]]
then
  rm -r /etc/azp/azp-depo/depo
    echo "$process" $"Add unoffical other AZP repository"
    sleep 1
    read -p $"Add Repo: " add_depo
    if [[ ${add_depo:0:8} != "https://" ]]
    then
      if [[ ${add_depo:0:7} != "http://" ]]
      then
        echo "$error" $"It is an invalid repo !"
        exit
      fi
    fi
    if [ -d /tmp/azp_depo_add ]
    then
      echo "$process" $"Old data remove..."
      rm -r /tmp/azp_depo_add
    fi
    mkdir -p /tmp/azp_depo_add
    cd /tmp/azp_depo_add
    echo "$process" $"'depo.zip' download..."
    if ! wget $add_depo/[depo]/depo.zip &>/dev/null;
    then
      echo "$error" "$add_depo" $" == depo.zip not found !"
      exit
    fi
    mkdir depo_file
    echo "$process" $"'depo.zip' extract..."
    unzip depo.zip -d depo_file &>/dev/null
    cd depo_file
    infodepo_name=$(sed -n 1p info-depo)
    if [ ${infodepo_name:0:5} != "name:" ]
    then
      echo "$error" $"'name:' not spelled correctly!"
      exit
    fi
    infodepo_description=$(sed -n 2p info-depo)
    if [ ${infodepo_description:0:12} != "description:" ]
    then
      echo "$error" $"'description:' not spelled correctly!"
      exit
    fi
    infodepo_link=$(sed -n 3p info-depo)
    if [ ${infodepo_link:0:5} != "link:" ]
    then
      echo "$error" $"'link:' not spelled correctly!"
      exit
    fi
    dlink=$(cat depo)
    dabout=$(cat info-depo)
    echo -e "\033[1;35m Depo: $dlink \033[:0m"
    echo -e "\033[1;37m $dabout \033[:0m"
    echo -e "\033[1;32m depo == /etc/azp/azp-depo \033[:0m"
    echo -e "\033[1;32m info-depo == /etc/azp/azp-depo \033[:0m"
    cp -p * /etc/azp/azp-depo/
    cd ..
    cd ..
    rm -r /tmp/azp_depo_add
    if [[ $add_depo == "-azpd" ]]
    then
      mkdir -p /tmp/azp_depo_add
      cd /tmp/azp_depo_add
      wget $azp_offical_depo/[depo]/depo.zip &>/dev/null
      mkdir depo_file
      echo "$process" $"'depo.zip' extract..."
      unzip depo.zip -d depo_file &>/dev/null
      cd depo_file
      dlink=$(cat depo)
      echo -e "\033[1;35m AZP Repo: $dlink \033[:0m"
      echo -e "\033[1;32m depo == /etc/azp/azp-depo \033[:0m"
      echo -e "\033[1;32m info-depo == /etc/azp/azp-depo \033[:0m"
      cp -p * /etc/azp/azp-depo/
      cd ..
      cd ..
      rm -r /tmp/azp_depo_add
    fi
fi




# AZP log təmizləmə
if [[ $1 == "-apc" ]]
then
  if [ ! -f /var/cache/azp-archives/*.azp ]
  then
    echo "$error" $"Not cleaned azp packages"
    exit
  fi
  echo -e "\033[1;34m $(cat /var/cache/azp-archives/archives) \033[:0m"
  read -p $"Some azp packages were found. Delete packages ? [h/y]: " packages_delete
  if [ $packages_delete == "h" ]
  then
    echo "$process" $"Deleting azp packages..."
    rm -r /var/cache/azp-archives/*
    echo "# AZP Archives" >> /var/cache/azp-archives/archives
    echo "$finished" $"Process Finished"
  fi
  [[ $packages_delete == "y" ]] && echo "$finished" $"Exit" && exit
fi




# AZP Gtk About ekranı
[[ $1 == "-azpa" ]] && azp-about.py




# Yardım
if [[ $1 == "-h" ]]
then
  echo "$info" "azp -i package.azp" $" = Install package"
  echo "$info" "azp -r application" $" = Remove package"
  echo "$info" "azp -a application" $" = Information about the program"
  echo "$info" "azp -pl" $" = Creates a list of installed programs"
  echo "$info" "azp install package" $" = Installing programs from the repository"
  echo "$info" "azp upgrade" $" = Update AZP to the latest version"
  echo "$info" "azp -dpl" $" = Indicates which programs are in the categories in the repository"
  echo "$info" "azp -azpd" $" = Add offical AZP Repo"
  echo "$info" "azp -azpdo" $" = Add unoffical other AZP Repo"
  echo "$info" "azp -azpa" $" = AZP About"
  echo "$info" "azp -apc" $" = AZP packages and arcives log clean"
fi
