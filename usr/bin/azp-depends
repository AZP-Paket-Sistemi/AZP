#!/bin/bash

### AZP Paket Sistemi 3.5
# AZP Offical Site: https://azp-paket-sistemi.github.io
# AZP Offical Depo: https://azp-paket-sistemi.github.io/azp-depo

# © 2021-2022 AZP
# © 2019-2022 PacPERRO

TEXTDOMAINDIR=/usr/share/locale
TEXTDOMAIN=azp-depends

# Rənglər
error=$(echo -e "\033[1;31m E: \033[:0m")
process=$(echo -e "\033[1;34m P: \033[:0m")
finished=$(echo -e "\033[1;32m F: \033[:0m")
remove=$(echo -e "\033[1;31m R: \033[:0m")
info=$(echo -e "\033[1;37m I: \033[:0m")
warning=$(echo -e "\033[1;33m V: \033[:0m")

# Prosesor arxitekturası
arch=$(uname -m)

azp_pack_depo=$(cat /etc/azp/azp-depo/depo)
if [ $1 == "depends" ]
then
  [[ -d /tmp/azp-depends ]] && rm -r /tmp/azp-depends &>/dev/null
  [[ ! -d /tmp/azp-depends ]] && mkdir -p /tmp/azp-depends
    for depends in $2;
    do
     cd /tmp/azp-depends
     if ! [ -d /var/cache/azp/applications/${depends} ]
     then
      [[ ! -d /tmp/azp-depends/${depends}/azptmp ]] && mkdir -p /tmp/azp-depends/${depends}/azptmp
      if ! wget $azp_pack_depo/${depends:0:1}/${depends}/latest-file &>/dev/null;
      then
        echo "$error" "${depends}" $" == depends not found !"
        rm -r /tmp/azp-depends &>/dev/null
        exit
      fi
      latestf=$(cat latest-file)
      if [ -z $latestf ]
      then
        if ! wget $azp_pack_depo/${depends:0:1}/${depends}/latest-file_$arch &>/dev/null;
          then
          echo -e "$error" $"Depo not connect !"
          rm -r /tmp/azp-depoins &>/dev/null
          exit
        fi
      fi
      pack=$([[ -z $(cat latest-file) ]] && echo "$(cat latest-file_$arch)" || echo "$(cat latest-file)")
      echo "$process" "$pack --" $"Download depends..."
      wget $azp_pack_depo/${depends:0:1}/${depends}/$pack &>/dev/null
      if [ ! -f $pack ]
      then
        echo "$error" $"Package Not Found !"
        exit
      fi
      cp -r $pack /var/cache/azp-archives
      if ! unzip $pack -d /tmp/azp-depends/${depends}/azptmp &>/dev/null;
      then
        echo "$error" $"The package could not be broken !"
        exit
      else
        echo "$process" $"Files Extract..."
      fi
      # AZP Archives faylını yeniləmə
      cp -r $pack /var/cache/azp-archives
      echo "$pack -- $(date "+DATE: %D   TIME: %T")" >> /var/cache/azp-archives/archives
      cd /tmp/azp-depends/${depends}/azptmp
      i_program=$(cat app-name)
      info=$(sed -n 1p info)
      mkdir -p /var/cache/azp/applications/$i_program
      if [ ! -f info ]
      then
        echo "$error" $"'info' not found, package invalid"
        rm -r /tmp/azp-depends/${depends}/azptmp &>/dev/null
        exit
      fi
      [[ ! -s info ]] && echo "$error" $"the 'info' file is not written!" && exit
        # 'info' faylına yazılanları yoxlama
        line_name=$(sed -n 1p info)
        if [[ ${line_name:0:5} != "name:" ]]
        then
          echo "$error" $"'name:' not spelled correctly in 'info' file!"
          exit
        fi
        line_description=$(sed -n 2p info)
        if [[ ${line_description:0:12} != "description:" ]]
        then
          echo "$error" $"'description:' not spelled correctly in 'info' file!"
          exit
        fi
        if [[ ${line_description:14} == "*" ]]
        then
           for ds in $(grep -n "description:" info);
           do
             if ! [[ ${ds:0:1} -gt 2 ]]
             then
                echo "$error" $"'description:' not spelled correctly in 'info' file! !"
                exit
             fi
           done
        fi
        line_version=$(sed -n 3p info)
        if [[ ${line_version:0:8} != "version:" ]]
        then
          echo "$error" $"'version:' not spelled correctly in 'info' file!"
          exit
        fi
        line_version=$(sed -n 4p info)
        if [[ ${line_version:0:11} != "maintainer:" ]]
        then
          echo "$error" $"'maintainer:' not spelled correctly in 'info' file!"
          exit
        fi
        if [ ${info:6} != ${i_program} ]
        then
          echo "$error" $"The program names in the 'files' and 'app-name' files do not match!"
          exit
        fi
      if ! [ -f app-name ]
      then
        echo "$error" $"'app-name' not found, package invalid"
        rm -r /tmp/azp-depends/${depends}/azptmp &>/dev/null
        exit
      fi
      if ! [ -s app-name ]
      then
        echo "$error" $"the 'app-name' file is not written!"
        exit
      fi
      if ! [ -f src.tar.bz2 ]
      then
        echo "$error" $"'src.tar.bz2' not found, package invalid"
        rm -r /tmp/azp-depends/${depends}/azptmp &>/dev/null
        exit
      fi
      # arch kontrol
      line_arch=$(sed -n 5p info)
      if [[ ${line_arch:0:13} == "architecture:" ]]
      then
        if [[ ${line_arch:14} != ${arch} ]] && [[ ${line_arch:14} != "amd64" ]]
        then
          echo "$error" $"Software arch is incompatible with processor arch"
          echo $"Processor Arch: " "${arch}"
          echo $"Program Arch: " "${line_arch:6}"
        fi
      fi
      # Paket bağımlılıqları quraşdırma
      if [ -f depends ]
      then
        echo "$(cat depends)" >> /tmp/azp-depends-list
      fi
      cp -a info /var/cache/azp/applications/$i_program
      cp -a app-name /var/cache/azp/applications/$i_program
      mkdir azpsrc
      if ! tar -xf src.tar.bz2 -C azpsrc;
      then
        echo "$error" $"There was a problem with the 'src' file !"
        rm -r /tmp/azp-depends/${depends}/azptmp &>/dev/null
        exit
      fi
      sleep 1
      echo "$(tar -tf src.tar.bz2)" >> azpsrc/srcfilelist
      cd azpsrc
      # Düzgün kopyalama prosesi
      echo "$process" $"Create files list..."
      for list in $(cat srcfilelist);
      do
        if [ -f ${list} ]
        then
          echo "/${list}" >> /var/cache/azp/applications/$i_program/files
          echo "${list}" >> copyfilelist
        else
          echo "${list}" >> folderslist
        fi
      done
      echo "$process" $"Create folders list..."
      touch /tmp/azp-depends/${depends}/azptmp/notfolders
       for folders in $(cat folderslist);
       do
         if [ ! -s /${folders} ]
         then
           echo "${folders}" >> /tmp/azp-depends/${depends}/azptmp/notfolders
         fi
       done
       for notfolders in $(cat /tmp/azp-depends/${depends}/azptmp/notfolders);
       do
         mkdir -p /${notfolders}
         echo "/${notfolders}" >> /var/cache/azp/applications/$i_program/files
       done
      echo "$process" $"Files copied to file system..."
       for cplist in $(cat copyfilelist);
       do
         cp -a ${cplist} /${cplist}
       done
      cd ..
      cd ..
      rm -r /tmp/azp-depends/${depends}
      rm -r /tmp/azp-depends/latest-file
      echo "$finished" $"Installation is complete for depends"
     else
      info_version=$(sed -n 3p /var/cache/azp/applications/${depends}/info)
      echo "$warning" "${depends} -- " $"Depends installed" "(${info_version:9})"
     fi
    done
fi
if [ -f /tmp/azp-depends-list ]
then
  for adl in $(cat /tmp/azp-depends-list);
  do
    rm -r /tmp/azp-depends-list &>/dev/null
    azp-depends depends ${adl}
  done
fi
[[ -f /tmp/azp-depends ]] && rm -r /tmp/azp-depends

if [ $1 == "dependsr" ]
then
  rm_depends=$2
  echo "$process" "$rm_depends" $"== remove depends..."
  d_fayllar=$(cat /var/cache/azp/applications/$rm_depends/files)
  rm -rf $d_fayllar &>/dev/null
  rm_d=$(cat /var/cache/azp/applications/$rm_depends/app-name)
  rm -rf /var/cache/azp/applications/$rm_d &>/dev/null
fi